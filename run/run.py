import sys

sys.path.append(r'..')


from datasets.create_datasets import CreateDataset
from test_programs.test_program import sig_classification, hyp_classification
from MRs.linear_MRs import LinearMRs

from sklearn.linear_model import LogisticRegression
from sklearn import svm
from sklearn.svm import LinearSVC

from algorithms.Logistic_regression.GD import *
from algorithms.Logistic_regression.Newton import *
from algorithms.Svm.APG.L1 import *
from algorithms.Svm.APG.L2 import *
from algorithms.Svm.IPM.L1 import *
from algorithms.Svm.IPM.L2 import *
import numpy as np
#np.random.seed(1)

if __name__ == '__main__':

	#n_train, n_test, n_features, n_redundant, n_classes, neg_class(算法是svm时 neg_class = -1, 算法是logreg时， neg_class = 0)
	
	datasets = CreateDataset(80,20,2,0,2,-1)

	print("APG_L1_m61")
	lr = APG_L1_m61()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m62")
	lr = APG_L1_m62()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m63")
	lr = APG_L1_m63()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m64")
	lr = APG_L1_m64()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m65")
	lr = APG_L1_m65()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m66")
	lr = APG_L1_m66()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m67")
	lr = APG_L1_m67()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m68")
	lr = APG_L1_m68()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m69")
	lr = APG_L1_m69()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m70")
	lr = APG_L1_m70()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m71")
	lr = APG_L1_m71()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m72")
	lr = APG_L1_m72()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m73")
	lr = APG_L1_m73()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m74")
	lr = APG_L1_m74()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m75")
	lr = APG_L1_m75()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m76")
	lr = APG_L1_m76()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m77")
	lr = APG_L1_m77()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m78")
	lr = APG_L1_m78()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m79")
	lr = APG_L1_m79()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m80")
	lr = APG_L1_m80()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m81")
	lr = APG_L1_m81()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m82")
	lr = APG_L1_m82()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m83")
	lr = APG_L1_m83()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m84")
	lr = APG_L1_m84()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m85")
	lr = APG_L1_m85()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m86")
	lr = APG_L1_m86()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m87")
	lr = APG_L1_m87()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m88")
	lr = APG_L1_m88()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m89")
	lr = APG_L1_m89()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m90")
	lr = APG_L1_m90()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m91")
	lr = APG_L1_m91()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m92")
	lr = APG_L1_m92()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m93")
	lr = APG_L1_m93()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m94")
	lr = APG_L1_m94()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m95")
	lr = APG_L1_m95()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m96")
	lr = APG_L1_m96()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m97")
	lr = APG_L1_m97()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m98")
	lr = APG_L1_m98()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m99")
	lr = APG_L1_m99()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m100")
	lr = APG_L1_m100()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m101")
	lr = APG_L1_m101()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m102")
	lr = APG_L1_m102()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m103")
	lr = APG_L1_m103()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m104")
	lr = APG_L1_m104()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m105")
	lr = APG_L1_m105()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m106")
	lr = APG_L1_m106()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m107")
	lr = APG_L1_m107()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m108")
	lr = APG_L1_m108()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m109")
	lr = APG_L1_m109()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m110")
	lr = APG_L1_m110()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m111")
	lr = APG_L1_m111()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m112")
	lr = APG_L1_m112()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m113")
	lr = APG_L1_m113()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m114")
	lr = APG_L1_m114()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m115")
	lr = APG_L1_m115()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m116")
	lr = APG_L1_m116()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m117")
	lr = APG_L1_m117()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m118")
	lr = APG_L1_m118()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m119")
	lr = APG_L1_m119()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m120")
	lr = APG_L1_m120()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m121")
	lr = APG_L1_m121()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m122")
	lr = APG_L1_m122()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()

	print("APG_L1_m123")
	lr = APG_L1_m123()
	test = LinearMRs(lr.fit, datasets.classification2, hyp_classification,30)
	test.MR1()
	test.MR2()
	test.MR3()
	test.MR4()
	test.MR5()
	test.MR6()
	test.MR7()
	test.MR8()
	test.MR9()
	#test = LinearMRs(lr.fit, datasets.classification, sig_classification, 50)

	#test.MR1()
	#test.MR2()
	#test.MR3()
	#test.MR4()
	#test.MR5()
	#test.MR6()
	#test.MR7()
	#test.MR8()
	#test.MR9()
	#lr = LR_GA_gv()
	#test = LinearMRs(lr.fit, datasets.classification, sig_classification, 100)
	#test.MR7()
	
	#datasets = CreateDataset(20,5,2,0,2,-1)
	#X_train, y_train, X_test, y_test = datasets.classification()
	#lr = SVM_CVX_L1_gv()
	#clf = lr.fit(X_train, y_train)
	#err, pred, conf = hyp_classification(clf.coef_, clf.intercept_, X_test, y_test)
	#print(err)